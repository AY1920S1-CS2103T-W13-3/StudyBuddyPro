@startuml
!include ../style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":StudyBuddyParser" as StudyBuddyParser LOGIC_COLOR
participant ":AddCheatSheetCommandParser" as AddCheatSheetCommandParser LOGIC_COLOR
participant "cs:AddCheatSheetCommand" as AddCheatSheetCommand LOGIC_COLOR
participant "edit:EditCheatSheetDescriptor" as EditCheatSheetDescriptor LOGIC_COLOR
participant "editedCheatSheet:CheatSheet" as CheatSheet LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

box Storage STORAGE_COLOR_T1
participant ":StudyBuddyBook" as StudyBuddyBook STORAGE_COLOR
end box

[-> LogicManager : execute("add t/a_title tag/a_tag")
activate LogicManager

LogicManager -> StudyBuddyParser : parseCommand("add t/a_title tag/a_tag")
activate StudyBuddyParser

StudyBuddyParser -> StudyBuddyParser : parseCheatSheetCommands("add", "t/a_title tag/a_tag")

create AddCheatSheetCommandParser
StudyBuddyParser -> AddCheatSheetCommandParser : parse("t/a_title tag/a_tag")
activate AddCheatSheetCommandParser

create AddCheatSheetCommand
AddCheatSheetCommandParser -> AddCheatSheetCommand
activate AddCheatSheetCommand

AddCheatSheetCommand --> AddCheatSheetCommandParser
deactivate AddCheatSheetCommand

AddCheatSheetCommandParser --> StudyBuddyParser : cs
deactivate AddCheatSheetCommandParser

StudyBuddyParser --> LogicManager : cs
deactivate StudyBuddyParser

LogicManager -> AddCheatSheetCommand : execute()
activate AddCheatSheetCommand

AddCheatSheetCommand -> Model : addCheatSheet(toAdd)
activate Model

Model --> AddCheatSheetCommand
deactivate Model

create EditCheatSheetDescriptor
AddCheatSheetCommand -> EditCheatSheetDescriptor
activate EditCheatSheetDescriptor

EditCheatSheetDescriptor --> AddCheatSheetCommand
deactivate EditCheatSheetDescriptor

AddCheatSheetCommand -> AddCheatSheetCommand : getRelevantContents(tags, model)
activate AddCheatSheetCommand

AddCheatSheetCommand --> AddCheatSheetCommand : contents
deactivate AddCheatSheetCommand

AddCheatSheetCommand -> EditCheatSheetDescriptor : setContents(contents)
activate EditCheatSheetDescriptor

EditCheatSheetDescriptor --> AddCheatSheetCommand
deactivate EditCheatSheetDescriptor

create CheatSheet
AddCheatSheetCommand -> CheatSheet : createEditedCheatSheet(toAdd, edit, true)
activate CheatSheet

CheatSheet --> AddCheatSheetCommand
deactivate CheatSheet

AddCheatSheetCommand -> Model : setCheatSheet(toAdd, editedCheatSheet)
activate Model

Model --> AddCheatSheetCommand
deactivate Model

create CommandResult
AddCheatSheetCommand -> CommandResult
activate CommandResult

CommandResult --> AddCheatSheetCommand
deactivate CommandResult

AddCheatSheetCommand --> LogicManager : result
deactivate AddCheatSheetCommand

AddCheatSheetCommand -[hidden]-> LogicManager : result
destroy AddCheatSheetCommand

LogicManager -> Model : getStudyBuddyBook()
activate Model

Model --> LogicManager : studyBuddyBook
deactivate Model

LogicManager -> StudyBuddyBook : saveStudyBuddyBook(studyBuddyBook)
activate StudyBuddyBook

StudyBuddyBook --> LogicManager
deactivate StudyBuddyBook

[<--LogicManager
deactivate LogicManager
@enduml
